{"version":3,"sources":["components/ui/Navbar/menu.svg","components/ui/Modal/index.js","services/auth.service.js","components/ui/Login/index.js","components/ui/Signup/index.js","components/ui/Navbar/index.js","components/pages/Home/index.js","components/pages/Patients/PatientCard/index.js","services/patients.service.js","components/pages/Patients/PatientForm/index.js","components/pages/Patients/index.js","services/mbiSurvey.service.js","components/pages/PatientProfile/SurveyForm/index.js","components/pages/PatientProfile/Graph/index.js","components/pages/PatientProfile/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","show","closeModal","Component","useEffect","document","querySelector","classList","add","remove","className","onClick","AuthService","loggedInUser","service","get","then","response","data","signup","username","password","post","login","logout","this","axios","create","baseURL","process","withCredentials","axiosCancelSource","CancelToken","source","setTheUser","useState","form","setForm","authServices","AuthServices","inputHandler","e","target","id","value","onSubmit","preventDefault","user","console","log","catch","err","htmlFor","type","onChange","placeholder","password1","password2","showModalForm","setShowModalForm","showMenu","setShowMenu","prevY","window","pageYOffset","onscroll","getElementsByClassName","to","src","menuImage","alt","Modal","Login","Signup","name","_id","style","padding","backgroundColor","PatientServices","newPatient","patient","getPatient","getAllPatiens","respose","setPatients","age","gender","patientService","PatientService","newPatients","patients","showModal","setModal","map","elm","PatientCard","key","PatientForm","mbiSureyService","newSurvey","survey","patientId","setPatient","weight","height","mbi","system","mbiService","MbiService","mbiCalculator","defaultValue","am4core","am4themes_animated","chart","am4charts","formatedData","date","Date","createdAt","categoryAxis","xAxes","push","dataFields","category","title","text","yAxes","series","valueY","dateX","dispose","width","match","params","display","SurveyForm","Graph","history","App","authService","changeMessage","isLoggedIn","useCallback","Navbar","marginTop","exact","path","render","Home","Patients","PatientProfile","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,kC,+PCK5B,G,OAAA,YAAsC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAQhC,OALAC,qBAAU,WACNH,GAAQI,SAASC,cAAc,QAAQC,UAAUC,IAAI,mBACpDP,GAAQI,SAASC,cAAc,QAAQC,UAAUE,OAAO,oBAC1D,CAACR,IAEGA,GAAQ,yBAAKS,UAAU,mBAE1B,6BAASA,UAAU,mBAAmBC,QAAUT,IAChD,yBAAKQ,UAAU,sBACX,6BAASA,UAAU,cACbT,GAAQE,GAAa,kBAACA,EAAD,CAAWD,WAAaA,S,yCChB1CU,EACjB,aAAe,IAAD,gCAKdC,aAAe,kBAAM,EAAKC,QAAQC,IAAI,eAAeC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SALjE,KAOdC,OAAS,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OAA4B,EAAKP,QAAQQ,KAAK,UAAW,CAAEF,WAAUC,aAAYL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAPtG,KAQdK,MAAQ,gBAAGH,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OAA4B,EAAKP,QAAQQ,KAAK,SAAU,CAAEF,WAAUC,aAAYL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SARpG,KASdM,OAAS,kBAAM,EAAKV,QAAQC,IAAI,WAAWC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SARjEO,KAAKX,QAAUY,IAAMC,OAAO,CAAEC,QAAQ,GAAD,OAAKC,uCAAL,SAAuCC,iBAAiB,IAC7FL,KAAKM,kBAAoBL,IAAMM,YAAYC,UCApC,cAAiC,IAA9BC,EAA6B,EAA7BA,WAAYhC,EAAiB,EAAjBA,WAAiB,EAGnBiC,mBAAS,CAAEf,SAAU,GAAIC,SAAU,KAHhB,mBAGpCe,EAHoC,KAG9BC,EAH8B,KAMrCC,EAAe,IAAIC,EAGnBC,EAAe,SAAAC,GAAC,OAAIJ,EAAQ,2BAAKD,GAAN,kBAAaK,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,UAUrE,OAAO,6BACH,0BAAMC,SAVY,SAAAJ,GAClBA,EAAEK,iBAEFR,EAAaf,MAAMa,GACdpB,MAAK,SAAAE,GAAI,OAAIA,EAAK6B,KAAOb,EAAWhB,EAAK6B,MAAQC,QAAQC,IAAI,4BAC7DjC,MAAK,kBAAMd,OACXgD,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAK1B,2BAAOC,QAAQ,YAAf,YACA,2BAAOC,KAAK,OAAOV,GAAG,WAAWC,MAAQR,EAAKhB,SAAWkC,SAAWd,EAAee,YAAY,kBAE/F,2BAAOH,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWV,GAAG,WAAWC,MAAQR,EAAKf,SAAWiC,SAAWd,EAAee,YAAY,6BAEnG,4BAAQF,KAAK,UAAb,aC1BG,cAAiC,IAA9BnD,EAA6B,EAA7BA,WAAYgC,EAAiB,EAAjBA,WAAiB,EAGnBC,mBAAS,CAAEf,SAAU,GAAIoC,UAAW,GAAIC,UAAW,KAHhC,mBAGpCrB,EAHoC,KAG9BC,EAH8B,KAMrCC,EAAe,IAAIC,EAGnBC,EAAe,SAAAC,GAAC,OAAIJ,EAAQ,2BAAKD,GAAN,kBAAaK,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,UAerE,OAAO,6BACH,0BAAMC,SAfY,SAAAJ,GAGlB,GAFAA,EAAEK,iBAEEV,EAAKoB,YAAcpB,EAAKqB,UACxB,OAAOT,QAAQC,IAAI,yBAGvBX,EAAanB,OAAO,CAAEC,SAAUgB,EAAKhB,SAAUC,SAAUe,EAAKoB,YACzDxC,MAAK,SAAAE,GAAI,OAAIA,EAAK6B,KAAOb,EAAWhB,EAAK6B,MAAQC,QAAQC,IAAI,6BAC7DjC,MAAK,kBAAMd,OACXgD,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAO1B,2BAAOC,QAAQ,YAAf,YACA,2BAAOC,KAAK,OAAOV,GAAG,WAAWC,MAAQR,EAAKhB,SAAWmC,YAAY,uBAAuBD,SAAWd,IAEvG,2BAAOY,QAAQ,aAAf,YACA,2BAAOC,KAAK,WAAWV,GAAG,YAAYY,YAAY,sBAAsBX,MAAQR,EAAKoB,UAAYF,SAAWd,IAE5G,2BAAOY,QAAQ,aAAf,wBACA,2BAAOC,KAAK,WAAWV,GAAG,YAAYY,YAAY,oBAAoBX,MAAQR,EAAKqB,UAAYH,SAAWd,IAE1G,4BAAQa,KAAK,UAAb,aC5BG,G,OAAA,YAA2C,IAAxCxC,EAAuC,EAAvCA,aAAcqB,EAAyB,EAAzBA,WAAYV,EAAa,EAAbA,OAAa,EAEXW,oBAAS,GAFE,mBAE9CuB,EAF8C,KAE/BC,EAF+B,OAGrBxB,oBAAS,GAHY,mBAG9CyB,EAH8C,KAGpCC,EAHoC,KAyBrD,OAnBAzD,qBAAU,WACN,IAAI0D,EAAQC,OAAOC,YAEnBD,OAAOE,SAAW,WACVH,EAAQC,OAAOC,YAAc,GAC7B3D,SAAS6D,uBAAuB,UAAU,GAAG3D,UAAUC,IAAI,YACpDsD,EAAQC,OAAOC,YAAc,IACpC3D,SAAS6D,uBAAuB,UAAU,GAAG3D,UAAUE,OAAO,YAElEqD,EAAQC,OAAOC,gBAIvB5D,qBAAU,WACNwD,GAAYvD,SAASC,cAAc,QAAQC,UAAUC,IAAI,mBAExDoD,GAAYvD,SAASC,cAAc,QAAQC,UAAUE,OAAO,oBAC9D,CAACmD,IAEG,yBAAKlD,UAAU,UAClB,yBAAKA,UAAU,oBAEX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMyD,GAAG,QAAQzD,UAAU,YAAYC,QAAU,kBAAMkD,GAAY,KAAnE,cACA,gCAAQ,yBAAKnD,UAAS,mBAAekD,EAAW,cAAgB,IAAOQ,IAAMC,IAAYC,IAAI,OAAO3D,QAAU,kBAAMkD,GAAaD,QAGrI,yBAAKlD,UAAS,oBAAgBkD,EAAW,YAAc,KACnD,4BACI,4BAAM/C,EAAe,kBAAC,IAAD,CAAMsD,GAAG,gBAAgBzD,UAAU,OAAOC,QAAU,kBAAMkD,GAAY,KAAtE,aAAkG,4BAAQnD,UAAU,gBAAgBC,QAAU,WAAQgD,EAAiB,SAAUE,GAAY,KAA3F,UACvH,4BAAMhD,EAAe,4BAAQH,UAAU,gBAAgBC,QAAU,WAAQa,IAAUqC,GAAY,KAA1E,UAAuG,4BAAQnD,UAAU,gBAAgBC,QAAU,WAAQgD,EAAiB,UAAWE,GAAY,KAA5F,cAMtIH,GAAiB,kBAACa,EAAD,CAAWtE,KAAOyD,EAAgBxD,WAAa,kBAAMyD,GAAiB,IAASxD,UAA8B,UAAlBuD,EAA4B,kBAAM,kBAACc,EAAD,CAAOtE,WAAa,kBAAMyD,GAAiB,IAASzB,WAAaA,KAAkB,kBAAM,kBAACuC,EAAD,CAAQvE,WAAa,kBAAMyD,GAAiB,IAASzB,WAAaA,UCtDpS,oBAAM,iCACjB,oCACA,gECDW,kBAAGwC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OAAmB,6BAASC,MAAQ,CAAEC,QAAS,WAAYC,gBAAiB,SACvF,kBAAC,IAAD,CAAMX,GAAE,wBAAoBQ,IAAUD,KCFrBK,EACjB,aAAe,IAAD,gCAIdC,WAAa,SAAAC,GAAO,OAAI,EAAKnE,QAAQQ,KAAK,cAAe2D,GAASjE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAJ9E,KAKdgE,WAAa,SAAAvC,GAAE,OAAI,EAAK7B,QAAQC,IAAI,eAAiB4B,GAAI3B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SALrE,KAMdiE,cAAgB,kBAAM,EAAKrE,QAAQC,IAAI,mBAAmBC,MAAK,SAAAoE,GAAO,OAAIA,EAAQlE,SAL9EO,KAAKX,QAAUY,IAAMC,OAAO,CAAEC,QAAQ,GAAD,OAAKC,uCAAL,YAA0CC,iBAAiB,KCCzF,cAAkC,IAA/B5B,EAA8B,EAA9BA,WAAYmF,EAAkB,EAAlBA,YAAkB,EAGpBlD,mBAAS,CAAEuC,KAAM,GAAIY,IAAK,EAAGC,OAAQ,KAHjB,mBAGrCnD,EAHqC,KAG/BC,EAH+B,KAMtCmD,EAAiB,IAAIC,EAGrBjD,EAAe,SAAAC,GAAC,OAAIJ,EAAQ,2BAAKD,GAAN,kBAAaK,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,UAiBrE,OAAO,6BACH,0BAAMC,SAjBY,SAAAJ,GAGlB,OAFAA,EAAEK,iBAEGV,EAAKsC,KACNtC,EAAKkD,KAAO,EAAUtC,QAAQC,IAAI,eAClB,SAAhBb,EAAKmD,QAAqC,WAAhBnD,EAAKmD,QAAuC,UAAhBnD,EAAKmD,OAA2BvC,QAAQC,IAAI,uBAEtGuC,EAAeR,WAAW5C,GACrBpB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAA0E,GAAW,OAAIL,EAAYK,MAChC1E,MAAK,kBAAMd,OACXgD,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MARPH,QAAQC,IAAI,aAgB/B,6BACI,2BAAOG,QAAQ,QAAf,QACA,2BAAOT,GAAG,OAAOU,KAAK,OAAOT,MAAQR,EAAKsC,KAAOpB,SAAWd,KAGhE,6BACI,2BAAOY,QAAQ,OAAf,OACA,2BAAOT,GAAG,MAAMU,KAAK,SAAST,MAAQR,EAAKkD,IAAMhC,SAAWd,KAGhE,6BACI,2BAAOY,QAAQ,UAAf,UACA,2BAAOT,GAAG,SAASU,KAAK,OAAOT,MAAQR,EAAKmD,OAASjC,SAAWd,KAGpE,4BAAQa,KAAK,UAAb,aCvCG,cAAsB,EAAnBxC,aAAoB,IAAD,EAGDsB,mBAAS,MAHR,mBAG1BwD,EAH0B,KAGhBN,EAHgB,OAIHlD,oBAAS,GAJN,mBAI1ByD,EAJ0B,KAIfC,EAJe,KAO3BL,EAAiB,IAAIT,EAQ3B,OANA3E,qBAAU,WACNoF,EAAeL,gBACVnE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAOmE,EAAYpE,EAASC,MAAQmE,GAAY,MAC1EnC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAC/B,IAEI,iCACDwC,EAAWA,EAASG,KAAI,SAAAC,GAAG,OAAI,kBAACC,EAAD,eAAaC,IAAMF,EAAIpB,KAAWoB,QAAyB,IAAbJ,EAAqB,yBAA2B,UAC/H,4BAAQhF,QAAU,kBAAMkF,GAAS,KAAjC,wBAEED,GAAa,kBAACrB,EAAD,CAAOtE,KAAO2F,EAAYzF,UAAY,kBAAM,kBAAC+F,EAAD,CAAab,YAAcA,EAAcnF,WAAa,kBAAM2F,GAAS,OAAc3F,WAAa,kBAAM2F,GAAS,QC3B7JM,EACjB,aAAe,IAAD,gCAIdC,UAAY,SAACC,GAAD,OAAY,EAAKvF,QAAQQ,KAAK,aAAc+E,GAAQrF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHtFO,KAAKX,QAAUY,IAAMC,OAAO,CAAEC,QAAQ,GAAD,OAAKC,uCAAL,cAA4CC,iBAAiB,KCE3F,cAAgC,IAA7BwE,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EAGlBpE,mBAAS,CAAEqE,OAAQ,EAAGC,OAAQ,EAAGC,IAAK,EAAGC,OAAQ,OAH/B,mBAGnCvE,EAHmC,KAG7BC,EAH6B,KAMpCuE,EAAa,IAAIC,EAMjBrE,EAAe,SAAAC,GAAC,aAAIJ,EAAQ,2BAAKD,GAAN,uBAAaK,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,OAApC,oBAHX,SAAC,GAAD,IAAG4D,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,IAAmBE,OAAnB,OAAyCH,GAAUC,EAASA,IAAuB,aAAnF,MAA4B,KAA5B,GAA0F,EAAI,KAGnCK,CAAc1E,IAA9D,MAUjC,OAAO,6BACH,0BAAMS,SAVY,SAAAJ,GAClBA,EAAEK,iBAEF8D,EAAWR,UAAX,aAAuBE,aAAclE,IAChCpB,MAAK,SAAAC,GAAQ,OAAIsF,EAAWtF,EAASC,SACrCF,MAAK,kBAAMqB,EAAQ,CAAEmE,OAAQ,EAAGC,OAAQ,EAAGC,IAAK,OAChDxD,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAM1B,6BACI,2BAAOC,QAAQ,UAAf,UACA,2BAAOT,GAAG,SAASU,KAAK,SAAST,MAAQR,EAAKoE,OAASlD,SAAWd,EAAee,YAAc,YAGnG,6BACI,2BAAOH,QAAQ,UAAf,UACA,2BAAOT,GAAG,SAASU,KAAK,SAAST,MAAQR,EAAKqE,OAASnD,SAAWd,EAAee,YAAc,YAGnG,6BACI,2BAAOH,QAAQ,UAAf,UACA,4BAAQT,GAAG,UACP,4BAAQoE,cAAY,EAACnE,MAAM,MAA3B,MACA,4BAAQA,MAAM,OAAd,SAIR,6BACI,mCAAUR,EAAKsE,MAGnB,4BAAQrD,KAAK,UAAb,a,2BC9CZ2D,IAAiBC,KAEF,kBAAe,IAAZ/F,EAAW,EAAXA,KA6Bd,OA3BAd,qBAAU,WAEN,GAAIc,EAAM,CACN,IAAIgG,EAAQF,IAAe,WAAYG,KAEjCC,EAAelG,EAAK4E,KAAI,SAAAC,GAAG,MAAK,CAAEsB,KAAM,IAAIC,KAAKvB,EAAIwB,WAAYb,IAAKX,EAAIW,QAE5Ec,EAAeN,EAAMO,MAAMC,KAAK,IAAIP,KACxCK,EAAaG,WAAWC,SAAW,OACnCJ,EAAaK,MAAMC,KAAO,OAEVZ,EAAMa,MAAML,KAAK,IAAIP,KAC3BU,MAAMC,KAAO,MAEvB,IAAIE,EAASd,EAAMc,OAAON,KAAK,IAAIP,KAOnC,OANAa,EAAOL,WAAWM,OAAS,MAC3BD,EAAOL,WAAWO,MAAQ,OAG1BhB,EAAMhG,KAAOkG,EAEN,WACCF,GAAOA,EAAMiB,cAG1B,CAACjH,IAEGA,EAAO,yBAAKyB,GAAG,WAAWiC,MAAQ,CAAEwD,MAAO,OAAQ3B,OAAQ,WAAiB,yCC1BxE,cAAgB,IAAb4B,EAAY,EAAZA,MAAY,EAEIlG,mBAAS,MAFb,mBAEnB8C,EAFmB,KAEVsB,EAFU,KAI1BnG,qBAAU,WACNoF,EAAeN,WAAWmD,EAAMC,OAAOhC,WAClCtF,MAAK,SAAAC,GAAQ,OAAIsF,EAAWtF,EAASC,SACrCgC,OAAM,SAAAC,GAAG,OAAIA,OACnB,IAGH,IAAMqC,EAAiB,IAAIC,EAE3B,OAAO,6BAASb,MAAQ,CAAE2D,QAAS,SAE/B,kBAACC,EAAD,CAAYjC,WAAaA,EAAaD,UAAY+B,EAAMC,OAAOhC,YAC7DrB,GAAW,kBAACwD,EAAD,CAAOvH,KAAO+D,EAAQyD,Y,OCX5B,SAASC,IAGtB,IAAMC,EAAc,IAAIhI,EAHI,EAMOuB,mBAAS,MANhB,mBAMrBtB,EANqB,KAMPqB,EANO,OAOKC,mBAAS,IAPd,mBAOZ0G,GAPY,WAWtBC,GADeC,uBAAY,kBAAMF,EAAc,MAAK,IACvCE,uBAAY,WAC7BH,EAAY/H,eACTG,MAAK,SAAAC,GAAQ,OAAIiB,EAAWjB,EAAS8B,SACrCG,OAAM,kBAAM2F,EAAc,8BAC5B,KAWH,OAHAzI,qBAAU,kBAAM0I,MAAc,CAACA,IAGxB,6BACL,kBAACE,EAAD,CAAQnI,aAAeA,EAAeqB,WAAaA,EAAaV,OAXnD,WACboH,EAAYpH,SACTR,MAAK,SAAAC,GAAQ,OAAIiB,EAAW,SAC5BgB,OAAM,SAAAC,GAAG,OAAIA,QAUhB,yBAAKyB,MAAQ,CAAEqE,UAAW,SAExB,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAS,kBAAM,kBAACC,EAAD,SACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,gBAAgBC,OAAS,kBAAMvI,EAAe,kBAACyI,EAAD,MAAe,kBAAC,IAAD,CAAUnF,GAAG,aAC5F,kBAAC,IAAD,CAAOgF,KAAK,2BAA2BC,OAAS,SAAAf,GAAK,OAAIxH,EAAe,kBAAC0I,EAAoBlB,GAAa,kBAAC,IAAD,CAAUlE,GAAG,aAEvH,kBAAC,IAAD,CAAUA,GAAG,aC1CDqF,QACW,cAA7BzF,OAAO0F,SAASC,UAEe,UAA7B3F,OAAO0F,SAASC,UAEhB3F,OAAO0F,SAASC,SAASrB,MACvB,2DCXNsB,IAASP,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkB/I,SAASuJ,eAAe,SD4H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/I,MAAK,SAAAgJ,GACJA,EAAaC,gBAEd/G,OAAM,SAAAgH,GACLlH,QAAQkH,MAAMA,EAAMC,c","file":"static/js/main.333e62f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.c9d61f05.svg\";","import React, { useEffect } from 'react'\n\n// Styles\nimport './modal.css'\n\nexport default ({ show, closeModal, Component }) => {\n\n\n    useEffect(() => {\n        show && document.querySelector('html').classList.add('blocked-scroll')\n        !show && document.querySelector('html').classList.remove('blocked-scroll')\n    }, [show])\n\n    return show && <div className='modal-container'>\n\n        <section className='modal-background' onClick={ closeModal } />\n        <div className='modal-main-wrapper'>\n            <section className='modal-main'>\n                { show && Component && <Component closeModal={ closeModal } /> }\n            </section>\n        </div>\n    </div>\n}","import axios from 'axios'\n\nexport default class AuthService {\n    constructor() {\n        this.service = axios.create({ baseURL: `${process.env.REACT_APP_URL}/auth`, withCredentials: true })\n        this.axiosCancelSource = axios.CancelToken.source()\n    }\n\n    loggedInUser = () => this.service.get('/isLoggedIn').then(response => response.data)\n\n    signup = ({ username, password }) => this.service.post('/signup', { username, password }).then(response => response.data)\n    login = ({ username, password }) => this.service.post('/login', { username, password }).then(response => response.data)\n    logout = () => this.service.get('/logout').then(response => response.data)\n}","import React, { useState } from \"react\"\n\n// Services\nimport AuthServices from '../../../services/auth.service'\n\nexport default ({ setTheUser, closeModal }) => {\n\n    // State\n    const [form, setForm] = useState({ username: '', password: '' })\n\n    // Services\n    const authServices = new AuthServices()\n\n    // Handlers\n    const inputHandler = e => setForm({ ...form, [e.target.id]: e.target.value })\n    const submitHandler = e => {\n        e.preventDefault()\n\n        authServices.login(form)\n            .then(data => data.user ? setTheUser(data.user) : console.log('The user doesnt exist'))\n            .then(() => closeModal())\n            .catch(err => console.log(err))\n    }\n\n    return <div>\n        <form onSubmit={ submitHandler }>\n            <label htmlFor='username' >Username</label>\n            <input type='text' id='username' value={ form.username } onChange={ inputHandler } placeholder='Your username' />\n\n            <label htmlFor='password' >Password</label>\n            <input type='password' id='password' value={ form.password } onChange={ inputHandler } placeholder='Write your password here' />\n\n            <button type='submit'>Submit</button>\n        </form>\n    </div>\n}","import React, { useState } from 'react'\n\n// Services\nimport AuthServices from '../../../services/auth.service'\n\n\nexport default ({ closeModal, setTheUser }) => {\n\n    // State\n    const [form, setForm] = useState({ username: '', password1: '', password2: '' })\n\n    // Services\n    const authServices = new AuthServices()\n\n    // Handlers\n    const inputHandler = e => setForm({ ...form, [e.target.id]: e.target.value })\n    const submitHandler = e => {\n        e.preventDefault()\n\n        if (form.password1 !== form.password2) {\n            return console.log('Not the same password')\n        }\n\n        authServices.signup({ username: form.username, password: form.password1 })\n            .then(data => data.user ? setTheUser(data.user) : console.log('the user already exist'))\n            .then(() => closeModal())\n            .catch(err => console.log(err))\n    }\n\n\n    return <div>\n        <form onSubmit={ submitHandler }>\n\n            <label htmlFor='username' >Username</label>\n            <input type='text' id='username' value={ form.username } placeholder='Choose your username' onChange={ inputHandler } />\n\n            <label htmlFor='password1' >Password</label>\n            <input type='password' id='password1' placeholder='Write your password' value={ form.password1 } onChange={ inputHandler } />\n\n            <label htmlFor='password2'>Repear your password</label>\n            <input type='password' id='password2' placeholder='The same password' value={ form.password2 } onChange={ inputHandler } />\n\n            <button type='submit'>Submit</button>\n\n        </form>\n    </div>\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// Image\nimport menuImage from './menu.svg'\n\n// Components\nimport ModalForm from '../Modal'\nimport Login from '../Login'\nimport Signup from '../Signup'\n\n// Styles\nimport './navbar.css'\n\nexport default ({ loggedInUser, setTheUser, logout }) => {\n\n    const [showModalForm, setShowModalForm] = useState(false)\n    const [showMenu, setShowMenu] = useState(false)\n\n    // Handles if the navbar is hidden (scroll)\n    useEffect(() => {\n        let prevY = window.pageYOffset\n\n        window.onscroll = () => {\n            if (prevY < window.pageYOffset + .1) {\n                document.getElementsByClassName('navbar')[0].classList.add('uphidden')\n            } else if (prevY > window.pageYOffset - .1) {\n                document.getElementsByClassName('navbar')[0].classList.remove('uphidden')\n            }\n            prevY = window.pageYOffset\n        }\n    })\n\n    useEffect(() => {\n        showMenu && document.querySelector('body').classList.add('blocked-scroll')\n\n        !showMenu && document.querySelector('body').classList.remove('blocked-scroll')\n    }, [showMenu])\n\n    return <div className='navbar'>\n        <div className='navbar-container'>\n\n            <div className='nav-header'>\n                <Link to='/home' className='home-link' onClick={ () => setShowMenu(false) }>CareExpand</Link>\n                <figure><img className={ `menu-img ${showMenu ? 'opened-menu' : ''}` } src={ menuImage } alt='menu' onClick={ () => setShowMenu(!showMenu) } /></figure>\n            </div>\n\n            <nav className={ `nav-links ${showMenu ? 'show-menu' : ''}` }>\n                <ul>\n                    <li>{ loggedInUser ? <Link to='/showPatients' className='link' onClick={ () => setShowMenu(false) }> Patients</Link> : <button className='link btn-link' onClick={ () => { setShowModalForm('login'); setShowMenu(false) } }>Login</button> }</li>\n                    <li>{ loggedInUser ? <button className='link btn-link' onClick={ () => { logout(); setShowMenu(false) } }>Logout</button> : <button className='link btn-link' onClick={ () => { setShowModalForm('signup'); setShowMenu(false) } }>Signup</button> }</li>\n                </ul>\n            </nav>\n\n        </div>\n\n        { showModalForm && <ModalForm show={ showModalForm } closeModal={ () => setShowModalForm(false) } Component={ showModalForm === 'login' ? () => <Login closeModal={ () => setShowModalForm(false) } setTheUser={ setTheUser } /> : () => <Signup closeModal={ () => setShowModalForm(false) } setTheUser={ setTheUser } /> } /> }\n    </div>\n}","import React from 'react'\n\nexport default () => <section>\n    <h1>Home</h1>\n    <p>To start please login or signup</p>\n</section>","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default ({ name, _id }) => <article style={ { padding: '5px 10px', backgroundColor: '#999' } }>\n    <Link to={ `/showPatients/${_id}` }>{ name }</Link>\n</article>","import axios from 'axios'\n\nexport default class PatientServices {\n    constructor() {\n        this.service = axios.create({ baseURL: `${process.env.REACT_APP_URL}/patient`, withCredentials: true })\n    }\n\n    newPatient = patient => this.service.post('/newPatient', patient).then(response => response.data)\n    getPatient = id => this.service.get('/getPatient/' + id).then(response => response.data)\n    getAllPatiens = () => this.service.get('/getAllPatients').then(respose => respose.data)\n}","import React, { useState } from 'react'\n\n// Services\nimport PatientService from '../../../../services/patients.service'\n\nexport default ({ closeModal, setPatients }) => {\n\n    // State\n    const [form, setForm] = useState({ name: '', age: 0, gender: '' })\n\n    // Services\n    const patientService = new PatientService()\n\n    // Handlers\n    const inputHandler = e => setForm({ ...form, [e.target.id]: e.target.value })\n    const submitHandler = e => {\n        e.preventDefault()\n\n        if (!form.name) return console.log('no-name')\n        if (form.age <= 0) return console.log('invalid-age')\n        if (form.gender !== 'male' && form.gender !== 'female' && form.gender !== 'other') return console.log('invalid-gender')\n\n        patientService.newPatient(form)\n            .then(response => response.data)\n            .then(newPatients => setPatients(newPatients))\n            .then(() => closeModal())\n            .catch(err => console.log(err))\n\n    }\n\n\n    return <div>\n        <form onSubmit={ submitHandler }>\n\n            <div>\n                <label htmlFor='name'>Name</label>\n                <input id='name' type='text' value={ form.name } onChange={ inputHandler } />\n            </div>\n\n            <div>\n                <label htmlFor='age'>Age</label>\n                <input id='age' type='number' value={ form.age } onChange={ inputHandler } />\n            </div>\n\n            <div>\n                <label htmlFor='gender'>Gender</label>\n                <input id='gender' type='text' value={ form.gender } onChange={ inputHandler } />\n            </div>\n\n            <button type='submit'>Submit</button>\n\n        </form>\n    </div>\n}","import React, { useState, useEffect } from 'react'\n\n// Components\nimport PatientCard from './PatientCard'\nimport Modal from '../../ui/Modal'\nimport PatientForm from './PatientForm'\n\n// Services\nimport PatientServices from '../../../services/patients.service'\n\nexport default ({ loggedInUser }) => {\n\n    // State\n    const [patients, setPatients] = useState(null)\n    const [showModal, setModal] = useState(false)\n\n    // Services\n    const patientService = new PatientServices()\n\n    useEffect(() => {\n        patientService.getAllPatiens()\n            .then(response => response.data ? setPatients(response.data) : setPatients(false))\n            .catch(err => console.log(err))\n    }, [])\n\n    return <section>\n        { patients ? patients.map(elm => <PatientCard key={ elm._id } { ...elm } />) : patients === false ? 'You dont have patients' : 'Loading' }\n        <button onClick={ () => setModal(true) }>Create a new patient</button>\n\n        { showModal && <Modal show={ showModal } Component={ () => <PatientForm setPatients={ setPatients } closeModal={ () => setModal(false) } /> } closeModal={ () => setModal(false) } /> }\n    </section>\n}","import axios from 'axios'\n\nexport default class mbiSureyService {\n    constructor() {\n        this.service = axios.create({ baseURL: `${process.env.REACT_APP_URL}/mbiSurvey`, withCredentials: true })\n    }\n\n    newSurvey = (survey) => this.service.post('/newSurvey', survey).then(response => response.data)\n}","import React, { useState } from 'react'\n\n// Services\nimport MbiService from '../../../../services/mbiSurvey.service'\n\n\nexport default ({ patientId, setPatient }) => {\n\n    // State\n    const [form, setForm] = useState({ weight: 0, height: 0, mbi: 0, system: 'is' })\n\n    // Services\n    const mbiService = new MbiService()\n\n    // Helpers\n    const mbiCalculator = ({ weight, height, system = 'is' }) => ((weight / (height * height)) * (system === 'is' ? 1 : 703))\n\n    // Handlers\n    const inputHandler = e => setForm({ ...form, [e.target.id]: e.target.value, mbi: mbiCalculator(form) })\n    const submitHandler = e => {\n        e.preventDefault()\n\n        mbiService.newSurvey({ patientId, ...form })\n            .then(response => setPatient(response.data))\n            .then(() => setForm({ weight: 0, height: 0, mbi: 0 }))\n            .catch(err => console.log(err))\n    }\n\n    return <div>\n        <form onSubmit={ submitHandler }>\n\n            <div>\n                <label htmlFor='weight'>Weight</label>\n                <input id='weight' type='number' value={ form.weight } onChange={ inputHandler } placeholder={ 'Weight' } />\n            </div>\n\n            <div>\n                <label htmlFor='height'>Height</label>\n                <input id='height' type='number' value={ form.height } onChange={ inputHandler } placeholder={ 'Height' } />\n            </div>\n\n            <div>\n                <label htmlFor='system'>System</label>\n                <select id='system'>\n                    <option defaultValue value='is'>SI</option>\n                    <option value='cgs'>CGS</option>\n                </select>\n            </div>\n\n            <div>\n                <p>MBI: { form.mbi }</p>\n            </div>\n\n            <button type='submit'>Submit</button>\n\n        </form>\n\n    </div>\n}","import React, { useEffect } from 'react'\n\n// amChart\nimport * as am4core from '@amcharts/amcharts4/core'\nimport * as am4charts from '@amcharts/amcharts4/charts'\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated'\n\nam4core.useTheme(am4themes_animated)\n\nexport default ({ data }) => {\n\n    useEffect(() => {\n\n        if (data) {\n            let chart = am4core.create(\"chartdiv\", am4charts.XYChart)\n\n            const formatedData = data.map(elm => ({ date: new Date(elm.createdAt), mbi: elm.mbi }))\n\n            let categoryAxis = chart.xAxes.push(new am4charts.DateAxis())\n            categoryAxis.dataFields.category = \"date\"\n            categoryAxis.title.text = 'Date'\n\n            let valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\n            valueAxis.title.text = 'MBI'\n\n            let series = chart.series.push(new am4charts.LineSeries());\n            series.dataFields.valueY = \"mbi\";\n            series.dataFields.dateX = \"date\";\n\n\n            chart.data = formatedData\n\n            return () => {\n                if (chart) chart.dispose()\n            }\n        }\n    }, [data])\n\n    return data ? <div id='chartdiv' style={ { width: '100%', height: '500px' } } /> : <p>'Loading'</p>\n}","import React, { useState, useEffect } from 'react'\n\n// Components\nimport SurveyForm from './SurveyForm'\nimport Graph from './Graph'\n\n\n// Services\nimport PatientService from '../../../services/patients.service'\n\n\n\nexport default ({ match }) => {\n\n    const [patient, setPatient] = useState(null)\n\n    useEffect(() => {\n        patientService.getPatient(match.params.patientId)\n            .then(response => setPatient(response.data))\n            .catch(err => err)\n    }, [])\n\n    // Services\n    const patientService = new PatientService()\n\n    return <section style={ { display: \"flex\" } }>\n\n        <SurveyForm setPatient={ setPatient } patientId={ match.params.patientId } />\n        { patient && <Graph data={ patient.history } />\n        }\n    </section>\n\n}","//React imports\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Switch, Redirect, Route } from 'react-router-dom'\n\n// Components\nimport Navbar from './components/ui/Navbar'\nimport Home from './components/pages/Home'\nimport Patients from './components/pages/Patients'\nimport PatientProfile from './components/pages/PatientProfile'\n\n//Style imports\nimport './App.css'\n\n//Services\nimport AuthService from './services/auth.service'\n\n\nexport default function App() {\n\n  // Services\n  const authService = new AuthService()\n\n  //USESTATE\n  const [loggedInUser, setTheUser] = useState(null)\n  const [message, changeMessage] = useState('')\n\n  //USECALLBAK\n  const clearMessage = useCallback(() => changeMessage(''), [])\n  const isLoggedIn = useCallback(() => {\n    authService.loggedInUser()\n      .then(response => setTheUser(response.user))\n      .catch(() => changeMessage('An error has occurred'))\n  }, [])\n  const logout = () => {\n    authService.logout()\n      .then(response => setTheUser(null))\n      .catch(err => err)\n  }\n\n  //USEEFFECT\n  useEffect(() => isLoggedIn(), [isLoggedIn])\n\n  //RETURN\n  return <div>\n    <Navbar loggedInUser={ loggedInUser } setTheUser={ setTheUser } logout={ logout } />\n\n    <div style={ { marginTop: '10vh' } }>\n\n      <Switch>\n\n        <Route exact path='/home' render={ () => <Home /> } />\n        <Route exact path='/showPatients' render={ () => loggedInUser ? <Patients /> : <Redirect to='/home' /> } />\n        <Route path='/showPatients/:patientId' render={ match => loggedInUser ? <PatientProfile { ...match } /> : <Redirect to='/home' /> } />\n\n        <Redirect to='/home' />\n      </Switch>\n\n    </div>\n\n  </div>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}